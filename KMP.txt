 static boolean KMP(char[]c,char[]p)
    {
        int[]arr = computeArray(p);
        int n = c.length;
        int m = p.length;
        int p0=0;
        int p1=0;
        while (p0<n&&p1<m)
        {
            if (c[p0]==p[p1])
            {
                p0++;
                p1++;
            }
            else
            {
                if (p1==0)
                    p0++;
                else
                    p1=arr[p1-1];
            }
        }
        if (p1==m)
            return true;
        return false;
    }
    static int[]computeArray(char[]c)
    {
        int n = c.length;
        int[]a = new int[n];
        int p0=0;
        int p1=1;
        while (p1<n&&p0<p1)
        {
            if (c[p0]==c[p1])
            {
                a[p1]=p0+1;
                p1++;
                p0++;
            }
            else
            {
                if (p0==0)
                {
                        p1++;
                }
                else
                {
                    p0=a[p0-1];
                }
            }

        }
        return a;
    }